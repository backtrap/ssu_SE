 * SOLID
함수와 데이터 구조를 클래스로 배치하는 방법
클래스들의 결합 방법을 설명

 1. SRP
 2. OCP
 3. LSP
 4. ISP
 5. DIP

 SRP
단일 책임 원칙
Single Responsibility Principle
단일 모듈은 한 동작에 대해서만 책임져야 한다

 OCP
개방 폐쇄 원칙
Open Closed Principle
개체의 확장 가능성은 열어두고
변경 가능성은 닫아두어야 한다

 LSP
리스코프 치환 법칙
Liskov Substitution Principle
상속을 사용하기 위한 가이드
올바른 상속 관계의 특징을 정의하기 위한 가이드
서브 타입은 언제나 기반 타입으로 교체할 수 있어야 한다
부모 클래스 타입의 자리에 자식 클래스를 넣어도
문제 없이 작동해야 한다

 DIP
의존성 역전 원칙
Dependency Inversion Principle
소스 코드의 의존이 추상에만 의존하고
구체에는 의존하지 않는다
즉, 변화하지 않는 것에 의존해야 한다는 것
즉, 변동성이 큰 것에 의존하지 않는다는 것


 * 정보 은닉  Information Hiding
변경될 가능성이 가장 높은 설계 부분을 분리하여
설계 요소가 변경될 경우
다른 부분이 광범위하게 수정되지 않도록
보호하는 원칙

객체지향 언어적 요소를 활용하여
객체에 대한 구체적인 정보를 노출시키지 않도록 하는 기법

알 필요가 없어
몰라도 기능을 간편하게 사용할 수 있도록 해준다

즉 정보 은닉은
 1. 데이터의 표현 방식에 신경쓰지 않도록 하는 것
 2. 정보를 은폐하여 온당치 못한 접근으로부터 보호하는 것

캡슐화는 관련된 데이터와 훔수를 묶어주는 장치에 불과한 반면
정보 은닉은 캡슐 속에 있는 데이터와 함수를
외부에 노출시키지 않고 내부에 숨기는 장치


 * 소프트웨어 아키텍처  software architecture
소프트웨어 구조

중요한 구성 요소의 조직 or 구조

소프트웨어의 구성요소들 사이에서
유기적인 관계를 표현하고
소프트웨어의 설계와 업그레이드를 통제하는 지침과 원칙

 아키텍처
핵심 구조를 말한
건물을 지을 때의 전체 구조를 관리
서비스의 동작 원리
구조화 과정의 시작이자 활동에 대한 기준
의사 결정의 결과물

대규모 소프트웨어를 개발할 때
복잡성의 문제를 해결하기 위한 것

소프트웨어 시스템의 구성 방법에 대한
중대한 결정사항을 모아 놓은 것

이해 관계자들의 시스템 이해와 의사 소통을 돕는다


 * 발행 구독 아키텍처 스타일  Publish and Subscribe Architecture Style
발행자 (pub)와 구독자 (sub)가 있고
그 사이에 브로커 (메시지 큐)가 존재하는 형태

수신자가 정해져 있지 x

시스템은 정해진 범주에 따라서
구독을 신청한 수신자에게 전달

수신자는 발행자에 대한 정보 없이
원하는 메시지 수신 가능

높은 확장성을 허용

메시지 큐 패러다임과 형제같은 관계로
일반적으로 대형 메시지 지향 미들웨어 솔루션의 일부이다

 메시지 필터링
구독을 한 수신자는
전체 발행된 메시지의 부분 집합만을 받는데
이때 수신자 별로 메시지를 분류하는 프로세스와 처리가 필터링
 1. 토픽 기반
 2. 컨텐츠 기반

 토픽 기반 시스템
수신자는 구독하고자 하는 모든 발행 메시지들을 받는다
해당 토픽의 수신자들 역시 모두 같은 메시지를 받는다

 컨텐츠 기반
메시지는 구독자에 의해 정의된 메시지 컨텐츠나 속성의 제한적 일치시에 전달된다
구독자는 메시지를 분류할 책임이 있다

 느슨한 결합 -> 결합도 낮춤
발행자는 구독자들과 느슨하게 결합되고
서로의 존재를 알 필요가 x
관심사는 오로지 토픽에 있고
발행자와 구독자는 시스템 토폴로지를 몰라도 상관 x
서로를 고려하지 않은 채 동작을 지속할 수 있다

but
 1. 일관성이 없다
 2. 흐름 예측이 힘들다
 3. 메시지 관리가 어렵다

 메시지 큐
프로세스 or 프로그램 인스턴스가
데이터 상호 교환 시 사용하는 통신 방법
메시지 지향 미들웨어 (MOM, Message Oreiented Middleware)를 구현한 시스템
비동기 메시지를 사용하는
응용 프로그램 간 데이터 송수신

 메시지 패턴
어떠한 의미를 지니는 메시지 (Message)를 주고 받는 형태로 구현되어지는 패턴
네트워크나 웹에서 많이 사용
ex) 웹의 요청과 응답


 