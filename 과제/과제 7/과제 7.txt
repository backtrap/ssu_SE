 * 블랙박스 테스트
기능 테스트를 말하는 것

소프트웨어의 내부 구조나 작동 원리를 모르는 상태에서
소프트웨어의 동작을 검사하는 방법

테스트 케이스는 프로그램이나 모듈의
요구나 명세를 기초로 결정
제품에 대한 요구사항과 결과물이 일치하는지 확인

프로그램 내부 구조를 고려하지 x
코드를 몰라도 됨

입력과 출력을 알아야 함

가능한 모든 기능을 전부 테스트하는 것이 좋다

사용자의 요구사항 명세를 보면서 테스트하는 것
구현된 기능을 테스트
소프트웨어 인터페이스에서 실시된다

 블랙박스 테스트의 종류
 1. 동치 분할 검사
 2. 경계값 분석
 3. 원인-효과 그래프 검사
 4. 오류 예측 검사
 5. 비교 검사

 동치 분할 검사
 1. 입력 자료에 초점을 맞춰
	테스트 케이스를 만들고 검사
 2. 동등 분할 기법이라고도 한다
 3. 입력 자료에만 치중

 경계값 분석
 1. 입력 자료에만 치중한 동치 분할 기법을 보완
 2. 조건의 중간값보다 경계값에서 오류가 발생할 확율이 더 높기 때문에
 3. 입력 조건의 경계값을 테스트 케이스로 선정하여 검사

 원인-효과 그래프 검사
효용성이 높은 테스트 케이스를 선정하여 검사

 오류 예측 검사
 1. 경험이나 감각으로 테스트
 2. 다른 블랙 박스 테스트 기법으로는 찾아낼 수 없는
	오류를 찾아내는 보충적 검사 기법
 3. 데이터 확인 검사라고도 한다

 비교 검사
여러 버전의 프로그램에 동일한 테스트 자료를 제공해서
동일한 결과가 출력하는지 테스트


 * Q1 답

 케이스 1
옳은 입력

 케이스 2
옳지 않은 입력
날짜가 이상
ex) 2000년 6월 35일

 케이스 3
옳지 않은 입력
미래의 날짜 입력
ex) 3024년 6월 4일 


 * 블랙 테스트와 화이트 테스트

 블랙 박스 테스트
인풋과 아웃풋만이 있음
내부 구조는 신경쓰지 x

 화이트 박스 테스트
코드 실행이 기준
내부 절차가 중요


 * EI Error Index
소프트웨어 품질 관리에서 
결함의 심각도와 발생 빈도를 고려하여
소프트웨어의 오류 상태를 평가하는 지표

 공식은
EI = 시그마(i x PIi) / PS

 i
오류의 심각도 수준
숫자가 클수록 심각도가 크다
보통은 1, 2, 3으로 표현

 PIi
특정 심각도 수준 i에 해당하는 오류 수
각 심각도 수준에 대해 발생한 오류의 개수를 의미

 PS
전체 소프트웨어의 크기
일반적으로 코드 라인 수, 기능 점수, 기타 소프트웨어의 크기를 나타내는 척도이다

주어진 소프트웨어의 오류 지수를 계산하기 위해
각 심각도 수준(i)에 해당하는 오류 수(PIi)를 수준(i)으로 가중치하여 합산한 후
이를 전체 소프트웨어의 크기(PS)로 나누어 산출하는 것

EI는 소프트웨어의 오류 상태를 나타내느 지표
